import{n as i,B as p,I as g,N as m,C as d,A as f,a as W,aD as w,b as y,c as C,e as T,g as b,h as E,G as A,i as R,k as S,aE as v,u as h,m as B,o as c,T as l}from"./index.d20289d4.js";import{S as O}from"./erc-20-standard-10861ed4.browser.esm.a82ff926.js";class F{constructor(t,r){this.contractWrapper=t,this.events=r}async getAllHolderBalances(){const r=(await this.events.getEvents("Transfer")).map(e=>e.data),a={};return r.forEach(e=>{const n=e?.from,s=e?.to,o=e?.value;n!==i&&(n in a||(a[n]=p.from(0)),a[n]=a[n].sub(o)),s!==i&&(s in a||(a[s]=p.from(0)),a[s]=a[s].add(o))}),Promise.all(Object.keys(a).map(async e=>({holder:e,balance:await g(this.contractWrapper.getProvider(),this.contractWrapper.address,a[e])})))}}class u extends O{static contractRoles=m;constructor(t,r,a){let e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new d(t,r,n,e,a);super(o,a,s),this.abi=f.parse(n||[]),this.metadata=new W(this.contractWrapper,w,this.storage),this.app=new y(this.contractWrapper,this.metadata,this.storage),this.roles=new C(this.contractWrapper,u.contractRoles),this.sales=new T(this.contractWrapper),this.events=new b(this.contractWrapper),this.history=new F(this.contractWrapper,this.events),this.encoder=new E(this.contractWrapper),this.estimator=new A(this.contractWrapper),this.platformFees=new R(this.contractWrapper),this.interceptor=new S(this.contractWrapper),this.signature=new v(this.contractWrapper,this.roles)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[t]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await h(t)])}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[B("transfer"),i])}mint=c(async t=>this.erc20.mint.prepare(t));mintTo=c(async(t,r)=>this.erc20.mintTo.prepare(t,r));async getMintTransaction(t,r){return this.erc20.getMintTransaction(t,r)}mintBatchTo=c(async t=>this.erc20.mintBatchTo.prepare(t));delegateTo=c(async t=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await h(t)]}));burn=c(t=>this.erc20.burn.prepare(t));burnFrom=c(async(t,r)=>this.erc20.burnFrom.prepare(t,r));async prepare(t,r,a){return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}}export{u as Token};
