import{aY as d,aJ as l,aP as G,aI as I,aQ as y,aL as s,aZ as r,aK as U,aV as k,aW as q,a_ as K}from"./index.fa08b557.js";import{W as Y,U as L,S as O,g as z}from"./url-bc88b2b6.browser.esm.0662f3de.js";const Z=new Set([1,137,10,42161,56]),x="eip155",j="wagmi.requestedChains",N="wallet_addEthereumChain",S="last-used-chain-id";var a=new WeakMap,_=new WeakMap,u=new WeakMap,P=new WeakSet,H=new WeakSet,E=new WeakSet,M=new WeakSet,w=new WeakSet,A=new WeakSet,W=new WeakSet,D=new WeakSet;class tt extends Y{constructor(e){super({...e,options:{isNewChainsStale:!0,...e.options}}),d(this,D),d(this,W),d(this,A),d(this,w),d(this,M),d(this,E),d(this,H),d(this,P),l(this,"id",G.walletConnect),l(this,"name","WalletConnect"),l(this,"ready",!0),I(this,a,{writable:!0,value:void 0}),I(this,_,{writable:!0,value:void 0}),I(this,u,{writable:!0,value:void 0}),l(this,"onAccountsChanged",i=>{i.length===0?this.emit("disconnect"):i[0]&&this.emit("change",{account:y(i[0])})}),l(this,"onChainChanged",async i=>{const t=Number(i),n=this.isChainUnsupported(t);await s(this,u).setItem(S,String(i)),this.emit("change",{chain:{id:t,unsupported:n}})}),l(this,"onDisconnect",async()=>{await r(this,w,v).call(this,[]),await s(this,u).removeItem(S),this.emit("disconnect")}),l(this,"onDisplayUri",i=>{this.emit("message",{type:"display_uri",data:i})}),l(this,"onConnect",()=>{this.emit("connect",{provider:s(this,a)})}),U(this,u,e.options.storage),r(this,P,b).call(this),this.filteredChains=this.chains.length>50?this.chains.filter(i=>Z.has(i.chainId)):this.chains}async connect(){let{chainId:e,pairingTopic:i}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{let t=e;if(!t){const m=await s(this,u).getItem(S),c=m?parseInt(m):void 0;c&&!this.isChainUnsupported(c)?t=c:t=this.filteredChains[0]?.chainId}if(!t)throw new Error("No chains found on connector.");const n=await this.getProvider();this.setupListeners();const o=await r(this,E,T).call(this);if(n.session&&o&&await n.disconnect(),!n.session||o){const m=this.filteredChains.filter(c=>c.chainId!==t).map(c=>c.chainId);this.emit("message",{type:"connecting"}),await n.connect({pairingTopic:i,chains:[t],optionalChains:m.length>0?m:[t]}),await r(this,w,v).call(this,this.filteredChains.map(c=>{let{chainId:Q}=c;return Q}))}const p=await n.enable();if(!p[0])throw new Error("No accounts found on provider.");const f=y(p[0]),g=await this.getChainId(),C=this.isChainUnsupported(g);return{account:f,chain:{id:g,unsupported:C},provider:new k(n)}}catch(t){throw/user rejected/i.test(t?.message)?new L(t):t}}async disconnect(){const e=()=>{if(!(typeof localStorage>"u"))for(const n in localStorage)n.startsWith("wc@2")&&localStorage.removeItem(n)};e();const i=await this.getProvider();(async()=>{try{await i.disconnect()}catch(n){if(!/No matching key/i.test(n.message))throw n}finally{r(this,M,R).call(this),await r(this,w,v).call(this,[]),e()}})()}async getAccount(){const{accounts:e}=await this.getProvider();if(!e[0])throw new Error("No accounts found on provider.");return y(e[0])}async getChainId(){const{chainId:e}=await this.getProvider();return e}async getProvider(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(s(this,a)||await r(this,P,b).call(this),e&&await this.switchChain(e),!s(this,a))throw new Error("No provider found.");return s(this,a)}async getSigner(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const[i,t]=await Promise.all([this.getProvider({chainId:e}),this.getAccount()]);return new k(i,e).getSigner(t)}async isAuthorized(){try{const[e,i]=await Promise.all([this.getAccount(),this.getProvider()]),t=await r(this,E,T).call(this);if(!e)return!1;if(t&&i.session){try{await i.disconnect()}catch{}return!1}return!0}catch{return!1}}async switchChain(e){const i=this.chains.find(t=>t.chainId===e);if(!i)throw new O(`Chain with ID: ${e}, not found on connector.`);try{const t=await this.getProvider(),n=r(this,W,F).call(this),o=r(this,D,J).call(this);if(!n.includes(e)&&o.includes(N)){const f=i.explorers&&i.explorers[0],g=f?{blockExplorerUrls:[f.url]}:{};await t.request({method:N,params:[{chainId:q(i.chainId),chainName:i.name,nativeCurrency:i.nativeCurrency,rpcUrls:z(i),...g}]});const C=await r(this,A,V).call(this);C.push(e),await r(this,w,v).call(this,C)}return await t.request({method:"wallet_switchEthereumChain",params:[{chainId:q(e)}]}),i}catch(t){const n=typeof t=="string"?t:t?.message;throw/user rejected request/i.test(n)?new L(t):new O(t)}}async setupListeners(){!s(this,a)||(r(this,M,R).call(this),s(this,a).on("accountsChanged",this.onAccountsChanged),s(this,a).on("chainChanged",this.onChainChanged),s(this,a).on("disconnect",this.onDisconnect),s(this,a).on("session_delete",this.onDisconnect),s(this,a).on("display_uri",this.onDisplayUri),s(this,a).on("connect",this.onConnect))}}async function b(){return s(this,_)||U(this,_,r(this,H,$).call(this)),s(this,_)}async function $(){const{default:h,OPTIONAL_EVENTS:e,OPTIONAL_METHODS:i}=await K(()=>import("./index.es.77e83cb6.js").then(o=>o.i),["assets/index.es.77e83cb6.js","assets/events.b6fa1ee0.js","assets/index.fa08b557.js","assets/index.5125156f.css"]),[t,...n]=this.filteredChains.map(o=>{let{chainId:p}=o;return p});t&&U(this,a,await h.init({showQrModal:this.options.qrcode!==!1,projectId:this.options.projectId,optionalMethods:i,optionalEvents:e,chains:[t],optionalChains:n,metadata:{name:this.options.dappMetadata.name,description:this.options.dappMetadata.description||"",url:this.options.dappMetadata.url,icons:[this.options.dappMetadata.logoUrl||""]},rpcMap:Object.fromEntries(this.filteredChains.map(o=>[o.chainId,o.rpc[0]||""])),qrModalOptions:this.options.qrModalOptions}))}async function T(){if(r(this,D,J).call(this).includes(N)||!this.options.isNewChainsStale)return!1;const e=await r(this,A,V).call(this),i=this.filteredChains.map(n=>{let{chainId:o}=n;return o}),t=r(this,W,F).call(this);return t.length&&!t.some(n=>i.includes(n))?!1:!i.every(n=>e.includes(n))}function R(){!s(this,a)||(s(this,a).removeListener("accountsChanged",this.onAccountsChanged),s(this,a).removeListener("chainChanged",this.onChainChanged),s(this,a).removeListener("disconnect",this.onDisconnect),s(this,a).removeListener("session_delete",this.onDisconnect),s(this,a).removeListener("display_uri",this.onDisplayUri),s(this,a).removeListener("connect",this.onConnect))}async function v(h){await s(this,u).setItem(j,JSON.stringify(h))}async function V(){const h=await s(this,u).getItem(j);return h?JSON.parse(h):[]}function F(){return s(this,a)?s(this,a).session?.namespaces[x]?.chains?.map(e=>parseInt(e.split(":")[1]||""))??[]:[]}function J(){return s(this,a)?s(this,a).session?.namespaces[x]?.methods??[]:[]}export{tt as WalletConnectConnector};
