import{N as m,C as u,A as d,a as g,aj as y,b as C,c as f,d as w,e as W,ak as A,h as T,G as b,g as S,i as k,al as E,am as R,k as N,l as v,B as c,a3 as i,m as F,n as I,o as n,T as p}from"./index.6dbc486f.js";import{S as U}from"./erc-721-standard-c858f30e.browser.esm.fdac511b.js";import{P as x}from"./thirdweb-checkout-49195812.browser.esm.8fe71fa7.js";class l extends U{static contractRoles=m;constructor(t,r,a){let e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,h=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new u(t,r,s,e,a);super(h,a,o),this.abi=d.parse(s||[]),this.metadata=new g(this.contractWrapper,y,this.storage),this.app=new C(this.contractWrapper,this.metadata,this.storage),this.roles=new f(this.contractWrapper,l.contractRoles),this.royalties=new w(this.contractWrapper,this.metadata),this.sales=new W(this.contractWrapper),this.claimConditions=new A(this.contractWrapper,this.metadata,this.storage),this.encoder=new T(this.contractWrapper),this.estimator=new b(this.contractWrapper),this.events=new S(this.contractWrapper),this.platformFees=new k(this.contractWrapper),this.revealer=new E(this.contractWrapper,this.storage,R.name,()=>this.erc721.nextTokenIdToMint()),this.interceptor=new N(this.contractWrapper),this.owner=new v(this.contractWrapper),this.checkout=new x(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async totalSupply(){const[t,r]=await Promise.all([this.totalClaimedSupply(),this.totalUnclaimedSupply()]);return t.add(r)}async getAllClaimed(t){const r=c.from(t?.start||0).toNumber(),a=c.from(t?.count||i).toNumber(),e=Math.min((await this.contractWrapper.read("nextTokenIdToClaim",[])).toNumber(),r+a);return await Promise.all(Array.from(Array(e).keys()).map(s=>this.get(s.toString())))}async getAllUnclaimed(t){const r=c.from(t?.start||0).toNumber(),a=c.from(t?.count||i).toNumber(),e=c.from(Math.max((await this.contractWrapper.read("nextTokenIdToClaim",[])).toNumber(),r)),s=c.from(Math.min((await this.contractWrapper.read("nextTokenIdToMint",[])).toNumber(),e.toNumber()+a));return await Promise.all(Array.from(Array(s.sub(e).toNumber()).keys()).map(o=>this.erc721.getTokenMetadata(e.add(o).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[F("transfer"),I])}createBatch=n(async(t,r)=>this.erc721.lazyMint.prepare(t,r));async getClaimTransaction(t,r){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return this.erc721.getClaimTransaction(t,r,{checkERC20Allowance:a})}claimTo=n((()=>{var t=this;return async function(r,a){let e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return t.erc721.claimTo.prepare(r,a,{checkERC20Allowance:e})}})());claim=n((()=>{var t=this;return async function(r){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return t.claimTo.prepare(await t.contractWrapper.getSignerAddress(),r,a)}})());burn=n(async t=>this.erc721.burn.prepare(t));async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,r){return this.erc721.isApproved(t,r)}transfer=n(async(t,r)=>this.erc721.transfer.prepare(t,r));setApprovalForAll=n(async(t,r)=>this.erc721.setApprovalForAll.prepare(t,r));setApprovalForToken=n(async(t,r)=>p.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[t,r]}));async prepare(t,r,a){return p.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}}export{l as NFTDrop};
