import{N as p,C as h,A as m,a as u,ah as d,b as l,c as g,d as W,e as C,h as w,G as T,g as y,i as f,k as R,ai as S,l as b,m as E,n as A,o as e,T as B}from"./index.258afac1.js";import{S as F}from"./erc-721-standard-c858f30e.browser.esm.a3161343.js";class s extends F{static contractRoles=p;constructor(t,r,a){let c=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new h(t,r,n,c,a);super(o,a,i),this.abi=m.parse(n||[]),this.metadata=new u(this.contractWrapper,d,this.storage),this.app=new l(this.contractWrapper,this.metadata,this.storage),this.roles=new g(this.contractWrapper,s.contractRoles),this.royalties=new W(this.contractWrapper,this.metadata),this.sales=new C(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new T(this.contractWrapper),this.events=new y(this.contractWrapper),this.platformFees=new f(this.contractWrapper),this.interceptor=new R(this.contractWrapper),this.signature=new S(this.contractWrapper,this.storage),this.owner=new b(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[E("transfer"),A])}mint=e(async t=>this.erc721.mint.prepare(t));mintTo=e(async(t,r)=>this.erc721.mintTo.prepare(t,r));async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}mintBatch=e(async t=>this.erc721.mintBatch.prepare(t));mintBatchTo=e(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r));burn=e(t=>this.erc721.burn.prepare(t));async prepare(t,r,a){return B.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}}export{s as NFTCollection};
