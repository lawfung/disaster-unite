import{aJ as d,aP as u,aI as l,aK as p,aL as m,aQ as w,a$ as f}from"./index.d20289d4.js";import{C as I,U as h,R as g}from"./url-bc88b2b6.browser.esm.fadece37.js";import{I as C}from"./thirdweb-dev-wallets-evm-connectors-injected.browser.esm.bda8c0dd.js";import"./normalizeChainId-e4cc0175.browser.esm.042707b7.js";var o=new WeakMap;class P extends C{constructor(e){const n={...{name:"Rainbow Wallet",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:f},...e.options};super({chains:e.chains,options:n,connectorStorage:e.connectorStorage}),d(this,"id",u.rainbow),l(this,o,{writable:!0,value:void 0}),p(this,o,n.UNSTABLE_shimOnConnectSelectAccount)}async connect(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{const t=await this.getProvider();if(!t)throw new I;this.setupListeners(),this.emit("message",{type:"connecting"});let n=null;if(m(this,o)&&this.options?.shimDisconnect&&!Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))&&(n=await this.getAccount().catch(()=>null),!!n))try{await t.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(a){if(this.isUserRejectedRequestError(a))throw new h(a)}if(!n){const s=await t.request({method:"eth_requestAccounts"});n=w(s[0])}let i=await this.getChainId(),c=this.isChainUnsupported(i);if(e.chainId&&i!==e.chainId)try{await this.switchChain(e.chainId),i=e.chainId,c=this.isChainUnsupported(e.chainId)}catch(s){console.error(`Could not switch to chain id : ${e.chainId}`,s)}this.options?.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const r={chain:{id:i,unsupported:c},provider:t,account:n};return this.emit("connect",r),r}catch(t){throw this.isUserRejectedRequestError(t)?new h(t):t.code===-32002?new g(t):t}}}export{P as RainbowConnector};
